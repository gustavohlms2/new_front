{"remainingRequest":"/home/dell/snap/teste_c/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dell/snap/teste_c/src/views/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dell/snap/teste_c/src/views/Login.vue","mtime":1611128926848},{"path":"/home/dell/snap/teste_c/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/snap/teste_c/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dell/snap/teste_c/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dell/snap/teste_c/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dell/snap/teste_c/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ3Jvb3ZlIHtib3JkZXItc3R5bGU6IGdyb292ZTt9Ci5jZW50ZXIgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0KLmRhbmdlciB7IGNvbG9yOiByZWQ7IH0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"columns is-mobile \">\n    <div class=\"column is-half is-offset-one-quarter \">\n      <div style=\"margin-top:20%;padding:10px;\" class=\"groove\">\n        <div class=\"tile\" style=\"margin: 10px;\">\n          <p class=\"title\" style=\"\">SIGO - IndTexBr </p>\n        </div>\n        <div class=\"field\">\n          <div class=\"control\">\n            <input class=\"input is-primary is-rounded\" type=\"email\" v-model=\"email\" placeholder=\"Email\" v-on:blur=\"validaEmail()\" >\n          </div>\n        </div>\n        <div class=\"field\">\n          <div class=\"control \">\n            <input class=\"input is-primary is-rounded\" type=\"password\" v-model=\"password\" placeholder=\"Password\"> \n          </div>\n        </div>\n        <div class=\"field center\">\n          <div class=\"control\" >\n            <button @click=\"login\" class=\"button is-success is-large center\" >Sign in</button>\n          </div>\n        </div>\n        <div class=\"center danger\">\n          {{ error }}\n        </div>\n      </div>      \n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      password: '',\n\n      error: '',\n    }\n  },\n  methods: {\n    login() {\n      let user = {\n        email: this.email,\n        password: this.password\n      }\n      User.findOne({ email: req.body.email }, (err, user) => {\n        if (err) \n          this.error = {\n            tite: 'Erro ao logar',\n            error: err\n          }    \n        if (!user) {\n          this.error = {\n            tite: 'user not found',\n            error: 'Usuário e senha inválidos'\n          }\n          return res.status(401).json({\n            title: 'user not found',\n            error: 'Usuário e senha inválidos'\n          })\n        }\n        //incorrect password\n        if (!bcrypt.compareSync(req.body.password, user.password)) {\n          this.error = {\n            tite: 'login failed',\n            error: 'Usuário e senha inválidos'\n          }\n        }\n        if (this.error == {} )\n          dt.setHours( dt.getHours() + 1 );\n          localStorage.setItem('token', jwt.sign({ userId: user._id}, 'secretkey') );\n          localStorage.setItem('expiresIn', dt);\n          this.$router.push('/');\n        }\n      })\n    },\n    validaEmail() {\n      if( this.email==\"\"  || this.email.indexOf('@')==-1  || this.email.indexOf('.')==-1 ){\n        this.email = '';\n        alert( \"Por favor, informe um E-MAIL válido!\" );\n        return false;\n      }\n    }\n  }\n}\n</script>\n\n\n<style>\n    .groove {border-style: groove;}\n    .center { text-align: center; }\n    .danger { color: red; }\n</style>"]}]}